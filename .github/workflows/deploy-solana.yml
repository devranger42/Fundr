name: Deploy Solana Program

on:
  push:
    branches: [main, deploy]
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        default: 'devnet'
        type: choice
        options:
          - devnet
          - testnet
          - mainnet-beta

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.4/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          
      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install latest
          avm use latest
          anchor --version
          
      - name: Setup Solana Wallet
        run: |
          echo "${{ secrets.SOLANA_WALLET }}" > ~/.config/solana/id.json
          chmod 600 ~/.config/solana/id.json
          solana config set --keypair ~/.config/solana/id.json
          solana config set --url https://api.${{ github.event.inputs.network || 'devnet' }}.solana.com
          
      - name: Check Balance
        run: |
          BALANCE=$(solana balance)
          echo "Wallet balance: $BALANCE"
          
      - name: Build Program
        run: |
          anchor build
          
      - name: Deploy Program
        id: deploy
        run: |
          PROGRAM_ID=$(solana address -k target/deploy/fundr-keypair.json)
          echo "Program ID: $PROGRAM_ID"
          echo "program_id=$PROGRAM_ID" >> $GITHUB_OUTPUT
          
          anchor deploy --provider.cluster ${{ github.event.inputs.network || 'devnet' }}
          
      - name: Update Frontend
        run: |
          PROGRAM_ID="${{ steps.deploy.outputs.program_id }}"
          sed -i "s/export const FUNDR_PROGRAM_ID = new PublicKey('.*');/export const FUNDR_PROGRAM_ID = new PublicKey('$PROGRAM_ID');/" client/src/lib/fundr-program.ts
          
      - name: Commit Changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'client/src/lib/fundr-program.ts'
          message: 'Update program ID to ${{ steps.deploy.outputs.program_id }}'
          default_author: github_actions
          
      - name: Create Deployment Summary
        run: |
          cat > deployment-summary.md << EOF
          # Deployment Summary
          
          **Program ID**: \`${{ steps.deploy.outputs.program_id }}\`
          **Network**: ${{ github.event.inputs.network || 'devnet' }}
          **Date**: $(date)
          **Commit**: ${{ github.sha }}
          
          ## Deployment Status
          ✅ Program successfully deployed
          ✅ Frontend updated with new program ID
          
          ## View on Explorer
          https://explorer.solana.com/address/${{ steps.deploy.outputs.program_id }}?cluster=${{ github.event.inputs.network || 'devnet' }}
          EOF
          
      - name: Upload Deployment Info
        uses: actions/upload-artifact@v4
        with:
          name: deployment-info
          path: |
            deployment-summary.md
            target/deploy/fundr-keypair.json
            target/idl/fundr.json